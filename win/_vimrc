set nocompatible              " be iMproved, required

so ~/vimfiles/plugins.vim     "Source our plugins file

"execute pathogen#infect()
set encoding=utf-8

"set nocompatible
"filetype plugin indent on
set shellslash
runtime macros/matchit.vim

syntax on

set autoindent
set pastetoggle=<f5>

set number                    "Activate line numbers
set shiftround

set tabstop=4
set shiftwidth=4
set softtabstop=4
set expandtab
let g:html_indent_inctags = "html,body,head,tbody"

set backspace=2
set backspace=indent,eol,start   "Make BKSP normal


"---------- Visual -----------"

" -- Solarized Dark --
" set t_Co=256
" set background=dark
" colorscheme solarized

" -- Tender --
colorscheme tender
let g:tender_lightline = 1
let g:lightline = { 'colorscheme': 'tender' }

" Remove scrollbars
set guioptions-=l
set guioptions-=L
set guioptions-=r
set guioptions-=R

set guioptions-=e             "No GUI tabs

set linespace=5               "Vertical spacing (GUI)

" Status bar settings - no lightline
" set statusline=%F%m%r%h%w\ [FORMAT=%{&ff}]\ [TYPE=%Y]\ [ASCII=\%03.3b]\ [HEX=\%02.2B]\ [POS=%l,%v][%p%%]\ [LEN=%L]
set laststatus=2

" Make line number background seamless, remove split borders
hi LineNr guibg=bg
hi vertsplit guifg=bg guibg=bg


"---------- Font ----------"

"The goto font face setups (GUI):

set guifont=Essential_PragmataPro:h13:cANSI
"set guifont=Source_Code_Pro_SemiBold:h11:cANSI
"set guifont=Operator_Mono_Light:h14:cANSI
"set guifont=Fura_Code_Light:h15:cANSI

highlight Comment gui=italic
highlight Comment cterm=italic
highlight htmlArg gui=italic
highlight htmlArg cterm=italic

"---------- Search ----------"

" Highlighted and incremental searches
set hlsearch
set incsearch

" The Silver Searcher
if executable('ag')
  " Use ag over grep
  set grepprg=ag\ --nogroup\ --nocolor

  " Use ag in CtrlP for listing files. Lightning fast and respects .gitignore
  let g:ctrlp_user_command = 'ag -l --nocolor -g %s ""'

  " ag is fast enough that CtrlP doesn't need to cache
  let g:ctrlp_use_caching = 0
endif

"---------- Split Management ----------"

set splitbelow
set splitright

" Make movement between splits easier
nmap <C-J> <C-W><C-J>
nmap <C-K> <C-W><C-K>
nmap <C-H> <C-W><C-H>
nmap <C-L> <C-W><C-L>


"---------- Key Mappings ----------"

" Map leader key to comma, easier reach
let mapleader = ','

" Easy vimrc edit access
no <leader>v :vsplit $MYVIMRC<CR>

" Turn off search highlights after completing a search
nmap <leader><space> :nohlsearch<CR>

" Rapidly toggle 'set list' and set whitespace identifiers
nmap <leader>l :set list!<CR>
set listchars=tab:▸\ ,eol:¬,nbsp:␣,extends:…,trail:•

" Find a tag (from ctag db)
nmap <leader>f :tag<space>

" Modify buffer navigation
nnoremap <silent> [b :bprevious<CR>
nnoremap <silent> ]b :bnext<CR>
nnoremap <silent> [B :bfirst<CR>
nnoremap <silent> ]B :blast<CR>

" Map easier exit from INS mode (esc to jk)
ino jk <esc>
ino <esc> <Nop>

" map :edit %:h (path of current buffer) to auto-expand with %%
cnoremap <expr> %% getcmdtype() == ':' ? expand('%:h').'/' : '%%'

" Anti-training wheels - arrows will do nothing
no <Up> ddkP
no <Down> ddp
no <Left> <Nop>
no <Right> <Nop>

ino <Up> <Nop>
ino <Down> <Nop>
ino <Left> <Nop>
ino <Right> <Nop>

vno <Up> <Nop>
vno <Down> <Nop>
vno <Left> <Nop>
vno <Right> <Nop>


"---------- Plugins ----------"

"/
"/ Ctrl-P
"/
let g:ctrlp_custom_ignore = 'node_modules\|git'
let g:ctrlp_match_window = 'top,order:ttb,min:1,max:30,results:30'

" Get to CtrlP tags and MRUs faster
nmap <C-R> :CtrlPBufTag<CR>
nmap <C-E> :CtrlPMRUFiles<CR>

"/
"/ NERDTree
"/
let NERDTreeHijackNetrw = 0

" Make NERDTree easier to toggle
nmap <leader>1 :NERDTreeToggle<CR>

"/
"/ Greplace
"/
let g:grep_cmd_opts = '--line-numbers --noheading'

"---------- Auto Commands ----------"

" Source the vimrc file after saving it
augroup vimrc_updates
  autocmd!
  autocmd bufwritepost _vimrc source $MYVIMRC
augroup END

augroup filetype_stuff
  autocmd!
  autocmd BufNewFile,BufReadPost *.md set filetype=markdown
augroup END


"""""""""""""""""""
""""" ABBREVIATIONS

iabbrev @@@ me@mroderick.org

"---------- Notes and Tips ----------"
" Press <C-]> to jump to where a function is defined (ctags)
